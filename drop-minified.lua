local b={Unknown=0,Root=1,Category=2,Section=3,Header=4,Entry=5,UiElement=6,}local c={}c.__index=c function c:New(G,H,I)local J=setmetatable({},c)J.Type=G or b.Unknown J.Parent=H or J.Parent J.Children={}J.GuiObject=I or nil if H then H:AddChild(J)end return J end function c:AddChild(G)G.Parent=self table.insert(self.Children,G)if G.GuiObject and self.GuiObject then G.GuiObject.Parent=self.GuiObject end end function c:RecursiveUpdateGui()self:UpdateGui()for G,H in ipairs(self.Children)do H:RecursiveUpdateGui()end end function c:UpdateGui()end local d={}d.__index=d setmetatable(d,c)function d:New(G,H,I)local J=setmetatable(c:New(b.UiElement),d)J.Value=nil J.Title=I J.Size=G J.Position=H return J end function d:SetValue()end function d:GetValue()return self.Value end local e={}e.PrimaryColor=Color3.fromRGB(27,38,59)e.SecondaryColor=Color3.fromRGB(13,27,42)e.AccentColor=Color3.fromRGB(41,115,115)e.TextColor=Color3.new(1,1,1)e.Font=Enum.Font.Gotham e.TextSize=13 e.HeaderWidth=300 e.HeaderHeight=32 e.EntryMargin=1 e.AnimationDuration=0.4 e.AnimationEasingStyle=Enum.EasingStyle.Quint e.DefaultEntryHeight=35 local f={}f.__index=f setmetatable(f,d)function f:New()local G=setmetatable(d:New(UDim2.new(0,20,0,20),UDim2.new(1,-20-5,0.5,-20/2),""),f)G.GuiObject=Instance.new("TextButton")G.GuiObject.MouseButton1Click:Connect(function()G.Parent.Parent.Collapsed=not G.Parent.Parent.Collapsed if G.Parent.Parent.Collapsed then G.Parent.Parent:Collapse()else G.Parent.Parent:Expand()end end)return G end function f:Collapse()self.GuiObject.Text="+"end function f:Expand()self.GuiObject.Text="-"end function f:UpdateGui()self.GuiObject.TextScaled=true self.GuiObject.TextColor3=e.TextColor self.GuiObject.BackgroundTransparency=1 self.GuiObject.Size=self.Size self.GuiObject.Position=self.Position if self.Parent.Parent.Collapsed then self.GuiObject.Text="+"else self.GuiObject.Text="-"end end local g={}g.__index=g setmetatable(g,c)function g:New(G)local H=setmetatable(c:New(b.Header),g)H.GuiObject=Instance.new("TextLabel")H.CollapseButton=f:New()H:AddChild(H.CollapseButton)return H end function g:UpdateGui()self.GuiObject.Size=UDim2.new(1,0,0,e.HeaderHeight)self.GuiObject.Text=self.Parent.Title self.GuiObject.TextSize=e.TextSize*1.25 self.GuiObject.TextColor3=e.TextColor self.GuiObject.Font=e.Font self.GuiObject.BorderSizePixel=0 self.GuiObject.BackgroundColor3=e.SecondaryColor if self.Parent.Type==b.Category then self.TextSize=e.TextSize*1.5 end end local h={}h.__index=h setmetatable(h,c)function h:New(G)local H=setmetatable(c:New(b.Entry),h)H.Value=nil H.Height=G or e.DefaultEntryHeight H.GuiObject=Instance.new("Frame")return H end function h:SetValue()end function h:GetValue()end function h:UpdateGui()self.GuiObject.BackgroundColor3=e.PrimaryColor self.GuiObject.BorderSizePixel=0 self.GuiObject.Size=UDim2.new(1,0,0,self.Height)end local i={}i.__index=i setmetatable(i,c)function i:New(G,H)local I=setmetatable(c:New(H),i)I.Collapsed=false I.Height=0 I.GuiObject=Instance.new("Frame")I.Header=g:New()I.Title=G or""I:AddChild(I.Header)return I end function i:UpdateGui()self.GuiObject.Size=UDim2.new(0,e.HeaderWidth,0,0)self.GuiObject.BackgroundColor3=e.SecondaryColor self.GuiObject.BorderSizePixel=0 self.GuiObject.ClipsDescendants=true self:ReorderGui(true)end function i:ReorderGui(G)G=G or false local H=e.AnimationDuration if G then H=0 end self.Height=e.HeaderHeight if not self.Collapsed then for I,J in pairs(self.Children)do if J.Type~=b.Header then J.GuiObject:TweenPosition(UDim2.new(0,0,0,self.Height),Enum.EasingDirection.InOut,e.AnimationEasingStyle,H,true)self.Height=self.Height+J.Height+e.EntryMargin end end self.Height=self.Height-e.EntryMargin end self.GuiObject:TweenSize(UDim2.new(0,e.HeaderWidth,0,self.Height),Enum.EasingDirection.InOut,e.AnimationEasingStyle,H,true)if self.Parent.Type~=b.Root then self.Parent:ReorderGui(G)end end function i:Collapse()self.Collapsed=true self.Header.CollapseButton:Collapse()self:ReorderGui()end function i:Expand()self.Collapsed=false self.Header.CollapseButton:Expand()self:ReorderGui()end function i:AddEntry(G)self:AddChild(G)G:RecursiveUpdateGui()self:ReorderGui(true)end local j={}j.__index=j setmetatable(j,i)function j:New(G)local H=setmetatable(i:New(G,b.Section),j)return H end function i:CreateSection(G)local H=j:New(G)self:AddChild(H)H:RecursiveUpdateGui()return H end local k=game:GetService("UserInputService")local l={}l.__index=l setmetatable(l,i)function l:New(G,H)local I=setmetatable(i:New(G,b.Category),l)I.Draggable=H or true I.Position=UDim2.new(0,0,00)I:ApplyDraggability()return I end function l:MoveTo(G)self.Position=G self.GuiObject.Position=G end function l:AutoMove()self:MoveTo(UDim2.fromOffset(100+(#self.Parent.Children-1)*(e.HeaderWidth*1.25),36))end function l:ApplyDraggability()self.LastMousePosition=k:GetMouseLocation()self.DragActive=false self.Header.GuiObject.InputBegan:Connect(function(G)if G.UserInputType==Enum.UserInputType.MouseButton1 and self.Draggable then self.DragActive=true end end)self.Header.GuiObject.InputEnded:Connect(function(G)if G.UserInputType==Enum.UserInputType.MouseButton1 then self.DragActive=false end end)k.InputChanged:Connect(function(G)if G.UserInputType==Enum.UserInputType.MouseMovement then if self.DragActive then local H=k:GetMouseLocation()-self.LastMousePosition self:MoveTo(UDim2.new(self.GuiObject.Position.X.Scale,self.GuiObject.Position.X.Offset+H.X,self.GuiObject.Position.Y.Scale,self.GuiObject.Position.Y.Offset+H.Y))end self.LastMousePosition=k:GetMouseLocation()end end)end local m={}m.__index=m setmetatable(m,d)function m:New(G,H,I,J)local K=setmetatable(d:New(G,H,I),m)K.Callback=J K.GuiObject=Instance.new("TextButton")K.GuiObject.MouseButton1Click:Connect(K.Callback)return K end function m:UpdateGui()self.GuiObject.BorderSizePixel=0 self.GuiObject.BackgroundColor3=e.SecondaryColor self.GuiObject.TextColor3=e.TextColor self.GuiObject.Size=self.Size self.GuiObject.Position=self.Position self.GuiObject.Text=self.Title self.GuiObject.TextSize=e.TextSize self.GuiObject.Font=e.Font end function i:CreateButton(G,H)local I=h:New()I:AddChild(m:New(UDim2.new(1,-10,1,-10),UDim2.new(0,5,0,5),G,H))self:AddEntry(I)return I end local n=game:GetService("UserInputService")local o={}o.__index=o setmetatable(o,d)function o:New(G,H,I,J,K,L,M,N,O,P)local Q=setmetatable(d:New(G,H,I),o)Q.Callback=J Q.Dynamic=N or false O=O or K Q.Step=M or 0.01 Q.Max=L Q.Min=K Q.CustomColor=P Q.Value=O or Q.Min Q.GuiObject=Instance.new("Frame")Q.Bg=Instance.new("Frame",Q.GuiObject)Q.Box=Instance.new("TextBox",Q.GuiObject)Q.Overlay=Instance.new("Frame",Q.Bg)Q.Handle=Instance.new("Frame",Q.Overlay)Q.Label=Instance.new("TextLabel",Q.Bg)Q.Active=false Q.Bg.InputBegan:Connect(function(R)if R.UserInputType==Enum.UserInputType.MouseButton1 then Q.Active=true local S=math.clamp(R.Position.X-Q.Bg.AbsolutePosition.X,0,Q.Bg.AbsoluteSize.X)/Q.Bg.AbsoluteSize.X Q:SetValue(Q.Min+(S*(Q.Max-Q.Min)))end end)Q.Bg.InputEnded:Connect(function(R)if R.UserInputType==Enum.UserInputType.MouseButton1 then Q.Active=false Q.Callback(Q.Value)end end)n.InputChanged:Connect(function(R)if R.UserInputType==Enum.UserInputType.MouseMovement then if Q.Active then local S=math.clamp(R.Position.X-Q.Bg.AbsolutePosition.X,0,Q.Bg.AbsoluteSize.X)/Q.Bg.AbsoluteSize.X Q:SetValue(Q.Min+(S*(Q.Max-Q.Min)))if Q.Dynamic then Q.Callback(Q.Value)end end end end)Q.Box.FocusLost:Connect(function()local R=tonumber(Q.Box.Text)if R then Q:SetValue(R)Q.Callback(Q.Value)else Q.Box.Text=Q.Value end end)return Q end function o:SetValue(G)self.Value=math.clamp(G-G%self.Step,self.Min,self.Max)self.Overlay.Size=UDim2.new((self.Value-self.Min)/(self.Max-self.Min),0,1,0)self.Box.Text=tostring(self.Value)end function o:UpdateGui()self.GuiObject.BackgroundColor3=e.SecondaryColor self.GuiObject.Size=self.Size self.GuiObject.Position=self.Position self.GuiObject.BorderSizePixel=0 self.GuiObject.BackgroundTransparency=1 self.Bg.BorderSizePixel=0 self.Bg.Size=UDim2.new(1-0.2,0,1,0)self.Bg.BackgroundColor3=e.SecondaryColor self.Box.Size=UDim2.new(0.2,-5,1,0)self.Box.Position=UDim2.new(0.8,5,0,0)self.Box.BorderSizePixel=0 self.Box.BackgroundColor3=e.SecondaryColor self.Box.TextColor3=e.TextColor self.Box.TextWrapped=true self.Overlay.BorderSizePixel=0 self.Overlay.BackgroundColor3=self.CustomColor or e.AccentColor self.Handle.Size=UDim2.new(0,5,1,0)self.Handle.Position=UDim2.new(1,-(5/2),0,0)self.Handle.BackgroundColor3=Color3.new(1,1,1)self.Handle.BorderSizePixel=0 self.Label.Text=self.Title self.Label.Font=e.Font self.Label.TextSize=e.TextSize self.Label.BackgroundTransparency=1 self.Label.Size=UDim2.new(1,0,1,0)self.Label.TextColor3=e.TextColor self:SetValue(self.Value)end local p={}p.__index=p setmetatable(p,h)function p:New(G,H,I,J,K,L,M)local N=setmetatable(h:New(),p)N.Slider=o:New(UDim2.new(1,-10,1,-14),UDim2.new(0,5,0,7),G,function(O)N.Value=O pcall(H,N.Value)end,I,J,K,L,M)N:SetValue(M or N:GetValue())N:AddChild(N.Slider)return N end function p:SetValue(G)self.Slider:SetValue(G)end function p:GetValue()return self.Slider.Value end function i:CreateSlider(G,H,I,J,K,L,M)local N=p:New(G,H,I,J,K,L,M)self:AddEntry(N)return N end local q=game:GetService("UserInputService")local r={}r.__index=r setmetatable(r,d)function r:New(G,H,I,J,K,L,M)local N=setmetatable(d:New(G,H,I),r)N.Callback=J N.Dynamic=L or false N.Value=M or""N.AcceptFormat=K or"^.*$"N.GuiObject=Instance.new("TextBox")N.GuiObject.FocusLost:Connect(function()if string.match(N.GuiObject.Text,N.AcceptFormat)then N:SetValue(N.GuiObject.Text)N.Callback(N.Value)else N.GuiObject.Text=N.Value end end)N.GuiObject.Changed:Connect(function(O)if N.Dynamic and O=="Text"and N.GuiObject:IsFocused()then if string.match(N.GuiObject.Text,N.AcceptFormat)then N:SetValue(N.GuiObject.Text)N.Callback(N.Value)else N.GuiObject.Text=N.Value end end end)return N end function r:SetValue(G)self.GuiObject.Text=G self.Value=G end function r:UpdateGui()self.GuiObject.BackgroundColor3=e.SecondaryColor self.GuiObject.TextColor3=e.TextColor self.GuiObject.PlaceholderText=self.Title self.GuiObject.Position=self.Position self.GuiObject.Size=self.Size self.GuiObject.TextSize=e.TextSize self.GuiObject.Font=e.Font self.GuiObject.BorderSizePixel=0 self:SetValue(self.Value)end local s={}s.__index=s setmetatable(s,h)function s:New(G,H,I,J,K)local L=setmetatable(h:New(),s)L.TextBox=r:New(UDim2.new(1,-10,1,-10),UDim2.new(0,5,0,5),G,H,I,J,K)L:AddChild(L.TextBox)return L end function s:SetValue(G)self.TextBox:SetValue(G)end function s:GetValue()return self.TextBox.Value end function i:CreateTextBox(G,H,I,J,K)local L=s:New(G,H,I,J,K)self:AddEntry(L)return L end local t=game:GetService("UserInputService")local u={}u.__index=u setmetatable(u,d)function u:New(G,H,I,J,K,L,M)local N=setmetatable(d:New(G,H,I),u)N.Callback=J N.Dynamic=L or false N.Value=M or e.AccentColor N.GuiObject=Instance.new("Frame")N.ColorImg=Instance.new("ImageLabel",N.GuiObject)N.Cursor=Instance.new("Frame",N.ColorImg)N.RSlider=o:New(UDim2.new(0.5,-10,1/6,0),UDim2.new(0.5,5,0/6,2),"Red",function(O)N:SetValue(Color3.new(O/255,N.Value.G,N.Value.B))end,0,255,1,true,N.Value.R,Color3.new(0.75,0,0))N:AddChild(N.RSlider)N.GSlider=o:New(UDim2.new(0.5,-10,1/6,0),UDim2.new(0.5,5,1/6,4),"Green",function(O)N:SetValue(Color3.new(N.Value.R,O/255,N.Value.B))end,0,255,1,true,N.Value.G,Color3.new(0,0.75,0))N:AddChild(N.GSlider)N.BSlider=o:New(UDim2.new(0.5,-10,1/6,0),UDim2.new(0.5,5,2/6,6),"Blue",function(O)N:SetValue(Color3.new(N.Value.R,N.Value.G,O/255))end,0,255,1,true,N.Value.B,Color3.new(0,0,0.75))N:AddChild(N.BSlider)N.HexBox=r:New(UDim2.new(0.5,-10,1/6,0),UDim2.new(0.5,5,3/6,8),"",function(O)local P={}for Q in O:gmatch("%x%x")do table.insert(P,tonumber("0x"..Q))end N:SetValue(Color3.fromRGB(unpack(P)))end,"^%x%x%x%x%x%x$")N:AddChild(N.HexBox)N.VSlider=o:New(UDim2.new(0.5,-10,1/6,0),UDim2.new(0.5,5,5/6,-2),"Value",function(O)local P,Q=Color3.toHSV(N.Value)N:SetValue(Color3.fromHSV(P,Q,O/255))end,0,255,1,true,({Color3.toHSV(N.Value)})[3],Color3.new(0.75,0.75,0.75))N:AddChild(N.VSlider)N.ColorImg.MouseMoved:Connect(function(O,P)if t:IsMouseButtonPressed(Enum.UserInputType.MouseButton1)then local Q=Vector2.new(O,P-36)-N.ColorImg.AbsolutePosition local R,S=1-Q.X/N.ColorImg.AbsoluteSize.X,1-Q.Y/N.ColorImg.AbsoluteSize.Y N:SetValue(Color3.fromHSV(R,S,N.VSlider.Value/255))end end)N.ColorImg.InputBegan:Connect(function(O)if O.UserInputType==Enum.UserInputType.MouseButton1 then local P=Vector2.new(O.Position.X,O.Position.Y)-N.ColorImg.AbsolutePosition local Q,R=1-P.X/N.ColorImg.AbsoluteSize.X,1-P.Y/N.ColorImg.AbsoluteSize.Y N:SetValue(Color3.fromHSV(Q,R,N.VSlider.Value/255))end end)N:SetValue(N.Value)return N end function u:SetValue(G)self.Value=G local H,I,J=Color3.toHSV(G)self.Cursor.Position=UDim2.new(1-H,-2,1-I,-2)self.VSlider:SetValue(J*255)self.RSlider:SetValue(G.R*255)self.GSlider:SetValue(G.G*255)self.BSlider:SetValue(G.B*255)self.HexBox:SetValue(string.format("%02x%02x%02x",self.Value.R*255,self.Value.G*255,self.Value.B*255))self.Callback(self.Value)end function u:UpdateGui()self.GuiObject.Size=self.Size self.GuiObject.Position=self.Position self.GuiObject.BackgroundTransparency=1 self.ColorImg.Image="rbxassetid://698052001"self.ColorImg.Size=UDim2.new(0.5,-10,1,-10)self.ColorImg.BorderSizePixel=0 self.ColorImg.Position=UDim2.new(0,5,0,5)self.Cursor.Size=UDim2.new(0,4,0,4,0)self.Cursor.BorderSizePixel=0 self.Cursor.BackgroundColor3=Color3.new(1,1,1)self:SetValue(self.Value)end local v={}v.__index=v setmetatable(v,h)function v:New(G,H,I,J)local K=setmetatable(h:New(),v)K.Title=G K.Dynamic=I K.Callback=H K.Label=Instance.new("TextLabel",K.GuiObject)K.ColorButton=Instance.new("TextButton",K.Label)K.ColorPicker=u:New(UDim2.new(1,0,0,e.HeaderWidth/2),UDim2.new(0,0,0,e.DefaultEntryHeight),G,function(L)K.ColorButton.BackgroundColor3=L K.Value=L if K.Dynamic and K.Toggled then pcall(K.Callback,L)end end,J)K.Toggled=false K.ColorButton.MouseButton1Click:Connect(function()if K.Toggled then K.Height=e.DefaultEntryHeight pcall(H,K.Value)else K.Height=e.HeaderWidth/2+e.DefaultEntryHeight end K.GuiObject:TweenSize(UDim2.new(1,0,0,K.Height),Enum.EasingDirection.InOut,e.AnimationEasingStyle,e.AnimationDuration,true)K.Parent:ReorderGui()K.Toggled=not K.Toggled end)K:SetValue(J or K:GetValue())K:AddChild(K.ColorPicker)return K end function v:SetValue(G)self.ColorPicker:SetValue(G)end function v:GetValue()return self.ColorPicker.Value end function v:UpdateGui()self.Label.Size=UDim2.new(1,-16,0,e.DefaultEntryHeight)self.Label.Position=UDim2.new(0,0,0,0)self.Label.BackgroundTransparency=1 self.Label.Font=e.Font self.Label.Text=self.Title self.GuiObject.ClipsDescendants=true self.GuiObject.BackgroundColor3=e.PrimaryColor self.GuiObject.BorderSizePixel=0 self.GuiObject.Size=UDim2.new(1,0,0,self.Height)self.Label.TextSize=e.TextSize self.Label.TextColor3=e.TextColor self.ColorButton.Size=UDim2.new(0,16,0,16,0)self.ColorButton.Position=UDim2.new(1,-37,0.5,-8)self.ColorButton.Text=""self.ColorButton.AutoButtonColor=false end function i:CreateColorPicker(G,H,I,J)local K=v:New(G,H,I,J)self:AddEntry(K)K:RecursiveUpdateGui()return K end local w=game:GetService("UserInputService")local function x(G,H)local I={}for J,K in pairs(G)do if string.match(string.lower(tostring(K)),string.lower(H))then table.insert(I,K)end end return I end local y={}y.__index=y setmetatable(y,d)function y:New(G,H,I,J,K)local L=setmetatable(d:New(G,H,I),y)L.Callback=J L.Getcall=K L.GuiObject=Instance.new("Frame")L.ScrollBox=Instance.new("ScrollingFrame",L.GuiObject)L.SearchBox=r:New(UDim2.new(1,0,0,30),UDim2.new(0,0,0,0),"Search",function(M)L:SetList(x(K(),M))end,nil,true)L:AddChild(L.SearchBox)return L end function y:SetList(G)local H=0 self.ScrollBox:ClearAllChildren()for I,J in pairs(G)do local K=Instance.new("TextButton",self.ScrollBox)K.Text=tostring(J)K.BackgroundColor3=e.SecondaryColor K.TextColor3=e.TextColor K.BorderColor3=e.PrimaryColor K.Size=UDim2.new(1,-4,0,30)K.Position=UDim2.new(0,2,0,K.AbsoluteSize.Y*(H))K.MouseButton1Click:Connect(function()self.Callback(J)self:SetList(x(self.Getcall(),self.SearchBox.Value))end)H=H+1 end self.ScrollBox.CanvasSize=UDim2.new(0,0,0,#G*30)end function y:UpdateGui()self.GuiObject.BorderSizePixel=0 self.GuiObject.BackgroundTransparency=1 self.GuiObject.Size=self.Size self.GuiObject.Position=self.Position self.ScrollBox.Position=UDim2.new(0,0,0,30+2)self.ScrollBox.BackgroundTransparency=1 self.ScrollBox.BorderSizePixel=0 self.ScrollBox.ScrollBarThickness=3 self.ScrollBox.Size=UDim2.new(1,0,1,-30)self:SetList(self.Getcall())end local z={}z.__index=z setmetatable(z,h)function z:New(G,H,I,J)local K=setmetatable(h:New(),z)K.Title=G K.Callback=H K.Selector=y:New(UDim2.new(1,0,0,e.DefaultEntryHeight*5),UDim2.new(0,0,0,e.DefaultEntryHeight),G,function(L)if not w:IsKeyDown(Enum.KeyCode.LeftShift)then K:Toggle()end K:SetValue(L)K.Callback(L)end,I)K:AddChild(K.Selector)K.Button=Instance.new("TextButton",K.GuiObject)K.Indicator=Instance.new("TextLabel",K.Button)K.Indicator.Text="▼"K.Toggled=false K.Button.MouseButton1Click:Connect(function()K:Toggle()K.Selector:SetList(x(K.Selector.Getcall(),K.Selector.SearchBox.Value))end)K:SetValue(J)return K end function z:Toggle()if self.Toggled then self.Height=e.DefaultEntryHeight self.Indicator.Text="▼"else self.Height=e.DefaultEntryHeight*6 self.Indicator.Text="▲"end self.GuiObject:TweenSize(UDim2.new(1,0,0,self.Height),Enum.EasingDirection.InOut,e.AnimationEasingStyle,e.AnimationDuration,true)self.Parent:ReorderGui()self.Toggled=not self.Toggled end function z:SetValue(G)self.Button.Text=string.format("%s [%s]",self.Title,tostring(G or"Empty"))self.Value=G end function z:GetValue()return self.Value end function z:UpdateGui()self.GuiObject.ClipsDescendants=true self.GuiObject.BackgroundColor3=e.PrimaryColor self.GuiObject.BorderSizePixel=0 self.GuiObject.Size=UDim2.new(1,0,0,self.Height)self.Button.Position=UDim2.new(0,5,0,5)self.Button.BorderSizePixel=0 self.Button.Font=e.Font self.Button.TextSize=e.TextSize self.Button.Size=UDim2.new(1,-10,0,self.Height-10)self.Button.BackgroundColor3=e.SecondaryColor self.Button.TextColor3=e.TextColor self.Button.AutoButtonColor=false self.Indicator.Size=UDim2.new(0,20,0,20)self.Indicator.Position=UDim2.new(0,0,0.5,-10)self.Indicator.BackgroundTransparency=1 self.Indicator.TextColor3=e.TextColor end function i:CreateSelector(G,H,I,J)local K=z:New(G,H,I,J)self:AddEntry(K)return K end local A=game:GetService("UserInputService")local B={}B.__index=B setmetatable(B,d)function B:New(G,H,I,J,K)local L=setmetatable(d:New(G,H,I),B)L.Callback=J L.Value=K or false L.GuiObject=Instance.new("Frame")L.Label=Instance.new("TextLabel",L.GuiObject)L.Button=Instance.new("TextButton",L.GuiObject)L.Button.MouseButton1Click:Connect(function()L:SetValue(not L.Value)L.Callback(L.Value)end)return L end function B:SetValue(G)self.Value=G if self.Value then self.Button.BackgroundColor3=e.AccentColor else self.Button.BackgroundColor3=e.SecondaryColor end end function B:UpdateGui()self.GuiObject.Size=self.Size self.GuiObject.BackgroundTransparency=1 self.GuiObject.Position=self.Position self.Label.Text=self.Title self.Label.TextSize=e.TextSize self.Label.Font=e.Font self.Label.BackgroundTransparency=1 self.Label.Size=UDim2.new(0.8,0,1,0)self.Label.TextColor3=e.TextColor self.Button.Size=UDim2.new(0,20,0,20)self.Button.BorderSizePixel=2 self.Button.BorderColor3=e.SecondaryColor self.Button.Position=UDim2.new(0.9,-10,0.5,-10)self.Button.Text=""self:SetValue(self.Value)end local C={}C.__index=C setmetatable(C,h)function C:New(G,H,I)local J=setmetatable(h:New(),C)J.Switch=B:New(UDim2.new(1,-10,1,-10),UDim2.new(0,5,0,5),G,H,I)J:AddChild(J.Switch)return J end function C:SetValue(G)self.Switch:SetValue(G)end function C:GetValue()return self.Switch.Value end function i:CreateSwitch(G,H,I)local J=C:New(G,H,I)self:AddEntry(J)return J end local D={}D.__index=D setmetatable(D,d)function D:New(G,H,I)local J=setmetatable(d:New(G,H,I),D)J.Callback=callback J.GuiObject=Instance.new("TextLabel")return J end function D:UpdateGui()self.GuiObject.BorderSizePixel=0 self.GuiObject.BackgroundTransparency=1 self.GuiObject.TextColor3=e.TextColor self.GuiObject.Size=self.Size self.GuiObject.Position=self.Position self.GuiObject.Text=self.Title self.GuiObject.TextSize=e.TextSize self.GuiObject.Font=e.Font end function i:CreateTextLabel(G)local H=h:New()H:AddChild(D:New(UDim2.new(1,-10,1,-10),UDim2.new(0,5,0,5),G))self:AddEntry(H)return H end local E={}E.__index=E setmetatable(E,c)function E:New()local G=setmetatable(c:New(b.Root),E)G.ScreenGui=Instance.new("ScreenGui",game.Players.LocalPlayer.PlayerGui)G.GuiObject=Instance.new("Frame",G.ScreenGui)return G end function E:UpdateGui()self.ScreenGui.ResetOnSpawn=false self.ScreenGui.IgnoreGuiInset=true self.GuiObject.Size=UDim2.new(1,0,1,0)self.GuiObject.BackgroundTransparency=1 end function E:Hide()self.ScreenGui.Enabled=false end function E:Show()self.ScreenGui.Enabled=true end function E:CleanUp()self.ScreenGui:Destroy()self=nil end function E:CreateCategory(G,H)local I=l:New(G,H)self:AddChild(I)if H then I:MoveTo(H)else I:AutoMove()end I:RecursiveUpdateGui()return I end local F=E:New()F:RecursiveUpdateGui()